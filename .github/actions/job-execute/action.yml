# action.yaml
name: 'Job Execute'
description: 'Job Execute'
inputs:
  job-name:
    description: 'Job name'
    required: true
  enable-dryrun:
    description: 'Enable Dryrun'
    required: true

runs:
  using: 'composite'
  steps:
    # - run: |
    #     echo runner.os: "${{ runner.os }}"
    #     echo inputs.enable-dryrun: "${{ inputs.enable-dryrun }}"
    #     echo condition1: "${{ (inputs.os == 'Windows') && (inputs.enable-dryrun == 'true') }}"
    #     echo condition2: "${{ (inputs.os != 'Windows') && (inputs.enable-dryrun == 'true') }}"
    #   shell: pwsh

    - name: Job Dryrun Execute for Windows
      if: ${{ (runner.os == 'Windows') && (inputs.enable-dryrun == 'true') }}
      shell: pwsh
      run: "${{ env.PYTHON_ALIAS }} ${{ env.SCRIPTS_LOCATION }}/job_dryrun.py --jobname \"${{ inputs.job-name }}\""

    - name: Job Dryrun Execute for Linux/MacOS
      if: ${{ (runner.os != 'Windows') && (inputs.enable-dryrun == 'true') }}
      shell: bash
      run: "${{ env.PYTHON_ALIAS }} ${{ env.SCRIPTS_LOCATION }}/job_dryrun.py --jobname \"${{ inputs.job-name }}\""

    - name: Job Execute for Windows
      if: ${{ (runner.os == 'Windows') && (inputs.enable-dryrun != 'true') }}
      shell: pwsh
      run: ./shell_commands.bat

    - name: Job Execute for Linux/MacOS
      if: ${{ (runner.os != 'Windows') && (inputs.enable-dryrun != 'true') }}
      shell: bash
      run: ./shell_commands.sh


# - run: |
         
      #       if("$ENABLE_CI_DRYRUN" == "true"){
      #           sh "$PYTHON_ALIAS $SCRIPTS_LOCATION/job_dryrun.py --jobname \"$jobName\""
      #       } else {
      #           dir("$SOURCECODE_FOLDER"){
      #               sh "../shell_commands.sh"
      #           }
      #       }
 